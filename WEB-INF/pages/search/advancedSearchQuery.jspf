<%
String loginUser = "testuser";
String loginPasswd = "testpassword";
String loginUrl = "jdbc:mysql://localhost:3306/moviedb";

try {
  Class.forName("com.mysql.jdbc.Driver").newInstance();
  Connection dbcon = DriverManager.getConnection(loginUrl, loginUser, loginPasswd);

  int searchOffset = (Integer.parseInt(searchPage) - 1) * Integer.parseInt(searchLimit);
  String orderColumn = searchOrder.split(" ")[0];
  String orderDirection = searchOrder.split(" ")[1];
  out.println("here");

  String searchStarQuery = "";
  String[] starInputs = searchStar.trim().split(" ");
  String starFirstName = "";
  String starLastName = "";

  if (starInputs.length == 1) {
    searchStarQuery = "OR stars.last_name LIKE ? ) AS b ON a.id = b.movie_id ";
    starFirstName = starInputs[0];
  } else if (starInputs.length == 2) {
    searchStarQuery = "AND stars.last_name LIKE ? ) AS b ON a.id = b.movie_id ";
    starFirstName = starInputs[0];
    starLastName = starInputs[1];
  }

  String searchGenreQuery = 
    "INNER JOIN " +
    "(SELECT DISTINCT movie_id from genres_in_movies " +
    "WHERE genres_in_movies.genre_id LIKE ? ) AS movie_genres " + 
    "ON movie_genres.movie_id = a.id ";

  String query = (
    "SELECT * " +
    "FROM movies AS a " +
    "INNER JOIN " +
    "(" +
    "  SELECT DISTINCT movie_id FROM stars_in_movies " +
    "  INNER JOIN stars ON stars_in_movies.star_id = stars.id " +
    "  WHERE stars.first_name LIKE ? " +
    searchStarQuery +
    searchGenreQuery +
    "WHERE a.title LIKE ? " +
    "AND a.year LIKE ? " +
    "AND a.director LIKE ? "
  );

  String queryWithOrder = query + "ORDER BY " + searchOrder + " LIMIT ? OFFSET ?";
  PreparedStatement statement = dbcon.prepareStatement(queryWithOrder);
  statement.setString(1, "%" + starFirstName + "%");
  statement.setString(2, "%" + ("".equals(starLastName) ? starFirstName : starLastName) + "%");
  statement.setString(3, "%" + searchGenre + "%");
  statement.setString(4, "%" + searchTitle + "%");
  statement.setString(5, "%" + searchYear + "%");
  statement.setString(6, "%" + searchDirector + "%");
  statement.setInt(7, Integer.parseInt(searchLimit));
  statement.setInt(8, searchOffset);
  out.println("<b>" + statement + "</b>");
  ResultSet rs = statement.executeQuery();

  HashMap<String, SearchRow> moviesMap = new HashMap<String, SearchRow>();
  String whereInStatementVariables = "";

  while (rs.next()) {
    String id = rs.getString("id");
    String title = rs.getString("title");
    String year = rs.getString("year");
    String banner = rs.getString("banner_url");
    SearchRow movie = new SearchRow(id, title, year, banner, rootPath);

    moviesMap.put(id, movie);
    whereInStatementVariables += "?" + (rs.isLast() ? "" : ",");
  }

  %>
  <%@ include file="processRows.jspf" %>
  <%@ include file="shoppingCartModal.jspf" %>
  <%

  rs.close();
  statement.close();
  dbcon.close();

} catch (SQLException ex) {
  while (ex != null) {
    System.out.println ("SQL Exception: " + ex.getMessage());
    ex = ex.getNextException();
  }
} catch (java.lang.Exception ex) {
  out.println("<p>SQL error: " + ex.getMessage() + "</p>");
}
%>
